plugins {
    id 'org.unbroken-dome.test-sets' version '1.4.2'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.3'
}

group projectGroup
version projectVersion

apply plugin: 'java'

Properties env = new Properties()
env.load(new FileInputStream("env.properties"))
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

testSets {
    integrationTest { dirName = 'integration-test' }
    functionalTest { dirName = 'functional-test' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile gradleTestKit()
    compile gradleApi()
}

gradlePlugin {
    plugins {
        "${projectArtifact}Plugin" {
            id = pluginId
            implementationClass = pluginClass
        }
    }
}

bintray {
    user = bintrayUser
    key = env.getProperty("BINTRAY_APIKEY")
    publish = true
    pkg {
        repo = bintrayRepository
        name = projectArtifact
        desc = description
        userOrg = bintrayUser
        licenses = ((String) projectLicenses).split(";")
        vcsUrl = scm
        labels = ((String) projectTags).split(";")
        publicDownloadNumbers = true
        websiteUrl = url
    }
    publications = ['pluginPublication']
}

pluginBundle {
    website = url
    vcsUrl = scm
    tags = ((String) projectTags).split(";")
    plugins {
        "${projectArtifact}Plugin" {
            displayName = displayName
            description = description
            id = pluginId
        }
    }
}

publishing {
    publications {
        pluginPublication(MavenPublication) {
            from components.java
            groupId projectGroup
            artifactId projectArtifact
            version projectVersion
        }
    }
}
functionalTest.dependsOn clean
bintrayUpload.dependsOn test
bintrayUpload.dependsOn integrationTest
bintrayUpload.dependsOn functionalTest
functionalTest.mustRunAfter integrationTest
integrationTest.mustRunAfter test
test.mustRunAfter clean

